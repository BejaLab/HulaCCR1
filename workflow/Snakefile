import shutil
from pandas import read_excel
import warnings

# all datasets as { dataset: basename } dict
datasets = dict(zip(*glob_wildcards("datasets/{dataset}/{basename}.fna")))

# all databases
databases = dict(zip(*glob_wildcards("databases/{database}/{basename}.pdb")))

# dataset metadata
with warnings.catch_warnings():
    warnings.simplefilter("ignore")
    metadata = read_excel("metadata/datasets.xlsx").set_index('analysis').T.to_dict('dict')

# reference PDB accession of HcKCR1 for alignment trimming
pdb_ref = "8H86"

wildcard_constraints:
    dataset = "|".join(datasets)

include: "Blastx.snakefile"
include: "Phylogeny.snakefile"
include: "Markers.snakefile"
include: "Flanks.snakefile"

rule all:
    input:
        rhodopsin_phylogeny = "analysis/phylogeny/pplacer.newick",
        clade_distrbution = "analysis/clade_distrbution.csv",
        transposon_phylogeny = "analysis/flanks/transposons_pplacer.newick",
        transposon_subclades = "analysis/flanks/transposons_subclades.csv",
        cryptist_phylogeny = "analysis/markers/ssu_phylogeny/RAxML_bipartitions.txt",
        sintax_tsv = "analysis/markers/rna/ssu/all_sintax.tsv",
        sintax_svg = "analysis/markers/rna/ssu/sintax.svg"
    output:
        rhodopsin_phylogeny = "output/Figure_2b_rhodopsin_phylogeny.newick",
        clade_distrbution = "output/Figure_2c_clade_distrbution.csv",
        transposon_phylogeny = "output/Figure_S1a_transposon_phylogeny.newick",
        transposon_subclades = "output/Figure_S1a_transposon_subclades.csv",
        cryptist_phylogeny = "output/Figure_S1b_cryptist_phylogeny.newick",
        sintax_tsv = "output/Figure_S2_sintax.tsv",
        sintax_svg = "output/Figure_S2_sintax.svg"
    run:
        for key in input.keys():
            shutil.copy(input[key], output[key])

rule link_dataset:
    input:
        "datasets/{dataset}/{basename}.fna"
    output:
        "analysis/datasets/{dataset}_{basename}.fna"
    shell:
        "ln -sr {input} {output}"

rule faidx:
    input:
        "analysis/datasets/{dataset}_{basename}.fna"
    output:
        "analysis/datasets/{dataset}_{basename}.fna.fai"
    conda:
        "envs/kits.yaml"
    shell:
        "seqkit faidx {input}"
